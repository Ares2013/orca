# Inspired by:
# https://github.com/teppeis-sandbox/circleci2-multiple-node-versions/blob/master/.circleci/config.yml
#
# List of node images:
# https://hub.docker.com/r/circleci/node/tags/
#
# Note that we use the '-browsers' variation which wraps electron with xvfb
# for headless testing

workflows:
  version: 2
  test-and-push:
    jobs:
      - test-node-v6
      - test-node-v8
      - docker-build
      - docker-push:
          requires:
            - test-node-v6
            - test-node-v8
            - docker-build

version: 2
jobs:
  base: &base
    docker:
      - image: node
    steps:
      - run:
          name: List versions
          command: |
            echo "npm: $(npm --version)"
            echo "node: $(node --version)"
      - checkout
      - restore_cache:
          keys:
            - v{{ .Environment.CIRCLE_CACHE_VERSION }}-deps-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package.json" }}
            - v{{ .Environment.CIRCLE_CACHE_VERSION }}-deps-master-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package.json" }}
      - run:
          name: Install deps
          command: |
            npm install
            sudo apt-get install poppler-utils
      - run:
          name: List deps
          command: |
            npm ls
            pdftops -v
      - save_cache:
          paths:
            - node_modules
          key: v{{ .Environment.CIRCLE_CACHE_VERSION }}-deps-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package.json" }}
      - run:
          name: Test
          command: npm test
      - run:
          name: Coverage
          command: npm run coverage
      - store_artifacts:
          path: build

  test-node-v6:
    <<: *base
    docker:
      - image: circleci/node:6.10.3-browsers

  test-node-v8:
    <<: *base
    docker:
      - image: circleci/node:8.4.0-browsers

  docker-build:
    docker:
      - image: circleci/node:6.10.3-browsers

    steps:
      - setup_remote_docker:
          reusable: true

      - checkout

      - run:
          name: Build Docker image
          command: |
            docker build -f deployment/Dockerfile -t gcr.io/${GOOGLE_PROJECT_ID}/imageserver:$CIRCLE_SHA1 .

      - run:
          name: Smoke test Docker image
          command: |
            docker run -d -p 9091:9091/tcp --name imageserver gcr.io/${GOOGLE_PROJECT_ID}/imageserver:$CIRCLE_SHA1
            docker run --network container:imageserver appropriate/curl --retry 60 --retry-connrefused --retry-delay 1 http://localhost:9091/ping

  docker-push:
    docker:
      - image: circleci/node:6.10.3-browsers

    steps:
      - setup_remote_docker:
          reusable: true

      - run:
          name: Install gcloud
          command: |
            echo "deb http://packages.cloud.google.com/apt cloud-sdk-jessie main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
            sudo apt-get update && sudo apt-get install google-cloud-sdk kubectl

      - run:
          name: Push Docker image to GCR
          command: |
            echo ${GOOGLE_AUTH} | base64 -i --decode > ${HOME}/gcp-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}

            docker tag gcr.io/${GOOGLE_PROJECT_ID}/imageserver:$CIRCLE_SHA1 gcr.io/${GOOGLE_PROJECT_ID}/imageserver:$CIRCLE_BRANCH
            gcloud docker -- push gcr.io/${GOOGLE_PROJECT_ID}/imageserver:$CIRCLE_SHA1
            gcloud docker -- push gcr.io/${GOOGLE_PROJECT_ID}/imageserver:$CIRCLE_BRANCH

      - run:
          name: Push Docker image to Docker hub
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker tag gcr.io/${GOOGLE_PROJECT_ID}/imageserver:$CIRCLE_SHA1 quay.io/plotly/image-exporter:$CIRCLE_BRANCH
            docker push quay.io/plotly/image-exporter:$CIRCLE_BRANCH
